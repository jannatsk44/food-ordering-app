{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\food-ordering-app\\\\src\\\\store\\\\CartProvider.js\",\n  _s = $RefreshSig$();\nimport { useReducer } from \"react\";\nimport CartContext from \"./cart-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\nconst cartReducer = (state, action) => {\n  if (action.type === 'ADD') {\n    let updatedItems;\n    const existingCartItemIndex = state.item.findIndex(item => item.id === action.item.id);\n    const existingCartItem = state.items[existingCartItemIndex];\n    if (existingCartItem) {\n      const updatedItem = {\n        ...existingCartItem,\n        amount: existingCartItem.amount + action.item.amount\n      };\n      updatedItems = [...state.item];\n      updatedItems[existingCartItemIndex] = updatedItem;\n    } else {\n      updatedItems = state.items.concat(action.item);\n    }\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n  return defaultCartState;\n};\nconst CartProvider = props => {\n  _s();\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n  const addItemToCartHandler = item => {\n    dispatchCartAction({\n      type: 'ADD',\n      item: item\n    });\n  };\n  const removeItemFromCartHandler = id => {\n    dispatchCartAction({\n      type: 'REMOVE',\n      id: id\n    });\n  };\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 13\n  }, this);\n};\n_s(CartProvider, \"PxEugEseoIJIbjFwtAJal5z5ClY=\");\n_c = CartProvider;\nexport default CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["useReducer","CartContext","jsxDEV","_jsxDEV","defaultCartState","items","totalAmount","cartReducer","state","action","type","updatedItems","existingCartItemIndex","item","findIndex","id","existingCartItem","updatedItem","amount","concat","updatedTotalAmount","CartProvider","props","_s","cartState","dispatchCartAction","addItemToCartHandler","removeItemFromCartHandler","cartContext","addItem","removeItem","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/React/food-ordering-app/src/store/CartProvider.js"],"sourcesContent":["import { useReducer } from \"react\";\r\nimport CartContext from \"./cart-context\";\r\n\r\nconst defaultCartState = {\r\n    items: [],\r\n    totalAmount: 0\r\n};\r\n\r\nconst cartReducer = (state, action) => {\r\n    \r\n    \r\n\r\n    if(action.type === 'ADD')\r\n    {\r\n        let updatedItems;\r\n        const existingCartItemIndex = state.item.findIndex(item => item.id === action.item.id);\r\n\r\n        const existingCartItem = state.items[existingCartItemIndex];\r\n\r\n        \r\n\r\n        if(existingCartItem)\r\n        {\r\n            const updatedItem ={\r\n                ...existingCartItem,\r\n                amount: existingCartItem.amount+action.item.amount\r\n            }\r\n            updatedItems = [...state.item];\r\n            updatedItems[existingCartItemIndex] =updatedItem\r\n        }\r\n        else{\r\n            updatedItems = state.items.concat(action.item);\r\n        }\r\n\r\n\r\n\r\n        return {\r\n            items: updatedItems,\r\n            totalAmount: updatedTotalAmount\r\n        };\r\n    }\r\n\r\n    return defaultCartState;\r\n};\r\n\r\nconst CartProvider = props => {\r\n    \r\n   const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\r\n\r\n    const addItemToCartHandler = item =>{\r\n        dispatchCartAction({type: 'ADD', item: item});\r\n    };\r\n\r\n    const removeItemFromCartHandler = id =>{\r\n        dispatchCartAction({type: 'REMOVE', id: id})\r\n    }\r\n    \r\n    const cartContext = {\r\n        items: cartState.items,\r\n         totalAmount:cartState.totalAmount,\r\n         addItem: addItemToCartHandler,\r\n         removeItem:removeItemFromCartHandler\r\n    };\r\n    \r\n    return( <CartContext.Provider value ={cartContext}>\r\n        {props.children}\r\n    </CartContext.Provider>\r\n)};\r\n\r\nexport default CartProvider"],"mappings":";;AAAA,SAASA,UAAU,QAAQ,OAAO;AAClC,OAAOC,WAAW,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,gBAAgB,GAAG;EACrBC,KAAK,EAAE,EAAE;EACTC,WAAW,EAAE;AACjB,CAAC;AAED,MAAMC,WAAW,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;EAInC,IAAGA,MAAM,CAACC,IAAI,KAAK,KAAK,EACxB;IACI,IAAIC,YAAY;IAChB,MAAMC,qBAAqB,GAAGJ,KAAK,CAACK,IAAI,CAACC,SAAS,CAACD,IAAI,IAAIA,IAAI,CAACE,EAAE,KAAKN,MAAM,CAACI,IAAI,CAACE,EAAE,CAAC;IAEtF,MAAMC,gBAAgB,GAAGR,KAAK,CAACH,KAAK,CAACO,qBAAqB,CAAC;IAI3D,IAAGI,gBAAgB,EACnB;MACI,MAAMC,WAAW,GAAE;QACf,GAAGD,gBAAgB;QACnBE,MAAM,EAAEF,gBAAgB,CAACE,MAAM,GAACT,MAAM,CAACI,IAAI,CAACK;MAChD,CAAC;MACDP,YAAY,GAAG,CAAC,GAAGH,KAAK,CAACK,IAAI,CAAC;MAC9BF,YAAY,CAACC,qBAAqB,CAAC,GAAEK,WAAW;IACpD,CAAC,MACG;MACAN,YAAY,GAAGH,KAAK,CAACH,KAAK,CAACc,MAAM,CAACV,MAAM,CAACI,IAAI,CAAC;IAClD;IAIA,OAAO;MACHR,KAAK,EAAEM,YAAY;MACnBL,WAAW,EAAEc;IACjB,CAAC;EACL;EAEA,OAAOhB,gBAAgB;AAC3B,CAAC;AAED,MAAMiB,YAAY,GAAGC,KAAK,IAAI;EAAAC,EAAA;EAE3B,MAAM,CAACC,SAAS,EAAEC,kBAAkB,CAAC,GAAGzB,UAAU,CAACO,WAAW,EAAEH,gBAAgB,CAAC;EAEhF,MAAMsB,oBAAoB,GAAGb,IAAI,IAAG;IAChCY,kBAAkB,CAAC;MAACf,IAAI,EAAE,KAAK;MAAEG,IAAI,EAAEA;IAAI,CAAC,CAAC;EACjD,CAAC;EAED,MAAMc,yBAAyB,GAAGZ,EAAE,IAAG;IACnCU,kBAAkB,CAAC;MAACf,IAAI,EAAE,QAAQ;MAAEK,EAAE,EAAEA;IAAE,CAAC,CAAC;EAChD,CAAC;EAED,MAAMa,WAAW,GAAG;IAChBvB,KAAK,EAAEmB,SAAS,CAACnB,KAAK;IACrBC,WAAW,EAACkB,SAAS,CAAClB,WAAW;IACjCuB,OAAO,EAAEH,oBAAoB;IAC7BI,UAAU,EAACH;EAChB,CAAC;EAED,oBAAQxB,OAAA,CAACF,WAAW,CAAC8B,QAAQ;IAACC,KAAK,EAAGJ,WAAY;IAAAK,QAAA,EAC7CX,KAAK,CAACW;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAC1B,CAAC;AAACd,EAAA,CAtBGF,YAAY;AAAAiB,EAAA,GAAZjB,YAAY;AAwBlB,eAAeA,YAAY;AAAA,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}