{"ast":null,"code":"import _slicedToArray from\"C:/React/food-ordering-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useRef,useState}from'react';import classes from'./Checkout.module.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var isEmpty=function isEmpty(value){return value.trim()==='';};var isFiveChars=function isFiveChars(value){return value.trim().length===5;};var Checkout=function Checkout(props){var _useState=useState({name:true,street:true,city:true,postalCode:true}),_useState2=_slicedToArray(_useState,2),formInputsValidity=_useState2[0],setFormInputsValidity=_useState2[1];var nameInputRef=useRef();var streetInputRef=useRef();var postalCodeInputRef=useRef();var cityInputRef=useRef();var confirmHandler=function confirmHandler(event){event.preventDefault();var enteredName=nameInputRef.current.value;var enteredStreet=streetInputRef.current.value;var enteredPostal=postalCodeInputRef.current.value;var enteredCity=cityInputRef.current.value;var enteredNameIsValid=!isEmpty(enteredName);var enteredStreetIsValid=!isEmpty(enteredStreet);var enteredPostalIsValid=isFiveChars(enteredPostal);var enteredCityIsValid=!isEmpty(enteredCity);setFormInputsValidity({name:enteredNameIsValid,street:enteredStreetIsValid,city:enteredCityIsValid,postalCode:enteredPostalIsValid});var formIsValid=enteredNameIsValid&&enteredStreetIsValid&&enteredPostalIsValid&&enteredCityIsValid;if(!formIsValid){return;}props.onConfirm({name:enteredName,street:enteredStreet,postalCode:enteredPostal,city:enteredCity});};var nameControlClasses=\"\".concat(classes.control,\" \").concat(formInputsValidity.name?'':classes.invalid);var streetControlClasses=\"\".concat(classes.control,\" \").concat(formInputsValidity.street?'':classes.invalid);var PostalCodeControlClasses=\"\".concat(classes.control,\" \").concat(formInputsValidity.postalCode?'':classes.invalid);var cityControlClasses=\"\".concat(classes.control,\" \").concat(formInputsValidity.city?'':classes.invalid);return/*#__PURE__*/_jsxs(\"form\",{className:classes.form,onSubmit:confirmHandler,children:[/*#__PURE__*/_jsxs(\"div\",{className:nameControlClasses,children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"name\",children:\"Your Name\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"name\",ref:nameInputRef}),!formInputsValidity.name&&/*#__PURE__*/_jsx(\"p\",{children:\"Please enter a valid name\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:streetControlClasses,children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"street\",children:\"Street\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"street\",ref:streetInputRef}),!formInputsValidity.street&&/*#__PURE__*/_jsx(\"p\",{children:\"Please enter a valid Street name\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:PostalCodeControlClasses,children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"postal\",children:\"Postal Code\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"postal\",ref:postalCodeInputRef}),!formInputsValidity.postalCode&&/*#__PURE__*/_jsx(\"p\",{children:\"Please enter a valid Postal Code\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:cityControlClasses,children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"city\",children:\"City\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"city\",ref:cityInputRef}),!formInputsValidity.city&&/*#__PURE__*/_jsx(\"p\",{children:\"Please enter a valid City\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:classes.actions,children:[/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:props.onCancel,children:\"Cancel\"}),/*#__PURE__*/_jsx(\"button\",{className:classes.submit,children:\"Confirm\"})]})]});};export default Checkout;","map":{"version":3,"names":["useRef","useState","classes","jsx","_jsx","jsxs","_jsxs","isEmpty","value","trim","isFiveChars","length","Checkout","props","_useState","name","street","city","postalCode","_useState2","_slicedToArray","formInputsValidity","setFormInputsValidity","nameInputRef","streetInputRef","postalCodeInputRef","cityInputRef","confirmHandler","event","preventDefault","enteredName","current","enteredStreet","enteredPostal","enteredCity","enteredNameIsValid","enteredStreetIsValid","enteredPostalIsValid","enteredCityIsValid","formIsValid","onConfirm","nameControlClasses","concat","control","invalid","streetControlClasses","PostalCodeControlClasses","cityControlClasses","className","form","onSubmit","children","htmlFor","type","id","ref","actions","onClick","onCancel","submit"],"sources":["C:/React/food-ordering-app/src/components/Cart/Checkout.js"],"sourcesContent":["import { useRef, useState } from 'react'\r\nimport classes from './Checkout.module.css';\r\n\r\nconst isEmpty = value => value.trim() === '';\r\n\r\nconst isFiveChars = value => value.trim().length === 5;\r\n\r\nconst Checkout = (props) => {\r\n  \r\n    const [formInputsValidity, setFormInputsValidity] =useState({\r\n      name: true,\r\n      street: true,\r\n      city: true,\r\n      postalCode: true\r\n    });\r\n  \r\n\r\n  const nameInputRef =  useRef();\r\n  const streetInputRef =  useRef();\r\n  const postalCodeInputRef =  useRef();\r\n  const cityInputRef =  useRef();\r\n  \r\n  const confirmHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    const enteredName = nameInputRef.current.value\r\n    const enteredStreet = streetInputRef.current.value\r\n    const enteredPostal = postalCodeInputRef.current.value\r\n    const enteredCity = cityInputRef.current.value\r\n\r\n    const enteredNameIsValid = !isEmpty(enteredName);\r\n    const enteredStreetIsValid = !isEmpty(enteredStreet);\r\n    const enteredPostalIsValid = isFiveChars(enteredPostal);\r\n    const enteredCityIsValid = !isEmpty(enteredCity);\r\n\r\n    setFormInputsValidity({\r\n      name: enteredNameIsValid,\r\n      street: enteredStreetIsValid,\r\n      city: enteredCityIsValid,\r\n      postalCode: enteredPostalIsValid\r\n\r\n    });\r\n\r\n    const formIsValid = enteredNameIsValid && enteredStreetIsValid && enteredPostalIsValid &&\r\n    enteredCityIsValid;\r\n  \r\n\r\n\r\n    if (!formIsValid) {\r\n      return;\r\n    }\r\n  \r\n    props.onConfirm({\r\n      name: enteredName,\r\n      street: enteredStreet,\r\n      postalCode: enteredPostal,\r\n      city: enteredCity\r\n    });\r\n  };\r\n\r\n  const nameControlClasses = `${classes.control} ${formInputsValidity.name ? '': classes.invalid}`\r\n  \r\n  const streetControlClasses = `${classes.control} ${formInputsValidity.street ? '': classes.invalid}`\r\n\r\n  const PostalCodeControlClasses = `${classes.control} ${formInputsValidity.postalCode ? '': classes.invalid}`\r\n\r\n  const cityControlClasses = `${classes.control} ${formInputsValidity.city ? '': classes.invalid}`\r\n\r\n\r\n  return (\r\n    <form className={classes.form} onSubmit={confirmHandler}>\r\n      <div className={nameControlClasses}>\r\n        <label htmlFor='name'>Your Name</label>\r\n        <input type='text' id='name' ref={nameInputRef}/>\r\n        {!formInputsValidity.name && <p>Please enter a valid name</p>}\r\n      </div>\r\n      <div className={streetControlClasses}>\r\n        <label htmlFor='street' >Street</label>\r\n        <input type='text' id='street' ref={streetInputRef} />\r\n        {!formInputsValidity.street && <p>Please enter a valid Street name</p>}\r\n\r\n      </div>\r\n      <div className={PostalCodeControlClasses}>\r\n        <label htmlFor='postal'>Postal Code</label>\r\n        <input type='text' id='postal' ref={postalCodeInputRef}/>\r\n        {!formInputsValidity.postalCode && <p>Please enter a valid Postal Code</p>}\r\n\r\n      </div>\r\n      <div className={cityControlClasses}>\r\n        <label htmlFor='city'>City</label>\r\n        <input type='text' id='city' ref={cityInputRef}/>\r\n        {!formInputsValidity.city && <p>Please enter a valid City</p>}\r\n\r\n      </div>\r\n      <div className={classes.actions}>\r\n        <button type='button' onClick={props.onCancel}>\r\n          Cancel\r\n        </button>\r\n        <button className={classes.submit}>Confirm</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Checkout;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}