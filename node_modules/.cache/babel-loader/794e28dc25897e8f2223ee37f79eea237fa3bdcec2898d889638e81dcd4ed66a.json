{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\food-ordering-app\\\\src\\\\store\\\\CartProvider.js\",\n  _s = $RefreshSig$();\nimport { useReducer } from \"react\";\nimport CartContext from \"./cart-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\nconst cartReducer = (state, action) => {\n  if (action.type === 'ADD') {\n    const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n    let itemExists = false;\n    const updatedItems = state.items.map(item => {\n      if (item.id === action.item.id) {\n        itemExists = true;\n        return {\n          ...item,\n          amount: item.amount + action.item.amount\n        };\n      }\n      return item;\n    });\n    if (!itemExists) {\n      updatedItems.push(action.item);\n    }\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n  return defaultCartState;\n};\nconst CartProvider = props => {\n  _s();\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n  const addItemToCartHandler = item => {\n    dispatchCartAction({\n      type: 'ADD',\n      item: item\n    });\n  };\n  const removeItemFromCartHandler = id => {\n    dispatchCartAction({\n      type: 'REMOVE',\n      id: id\n    });\n  };\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 13\n  }, this);\n};\n_s(CartProvider, \"PxEugEseoIJIbjFwtAJal5z5ClY=\");\n_c = CartProvider;\nexport default CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["useReducer","CartContext","jsxDEV","_jsxDEV","defaultCartState","items","totalAmount","cartReducer","state","action","type","updatedTotalAmount","item","price","amount","itemExists","updatedItems","map","id","push","CartProvider","props","_s","cartState","dispatchCartAction","addItemToCartHandler","removeItemFromCartHandler","cartContext","addItem","removeItem","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/React/food-ordering-app/src/store/CartProvider.js"],"sourcesContent":["import { useReducer } from \"react\";\r\nimport CartContext from \"./cart-context\";\r\n\r\nconst defaultCartState = {\r\n    items: [],\r\n    totalAmount: 0\r\n};\r\n\r\nconst cartReducer = (state, action) => {\r\n    if (action.type === 'ADD') {\r\n      const updatedTotalAmount =\r\n        state.totalAmount + action.item.price * action.item.amount;\r\n  \r\n      let itemExists = false;\r\n      const updatedItems = state.items.map((item) => {\r\n        if (item.id === action.item.id) {\r\n          itemExists = true;\r\n          return {\r\n            ...item,\r\n            amount: item.amount + action.item.amount,\r\n          };\r\n        }\r\n        return item;\r\n      });\r\n  \r\n      if (!itemExists) {\r\n        updatedItems.push(action.item);\r\n      }\r\n  \r\n      return {\r\n        items: updatedItems,\r\n        totalAmount: updatedTotalAmount,\r\n      };\r\n    }\r\n  \r\n    return defaultCartState;\r\n  };\r\n  \r\n  \r\n\r\nconst CartProvider = props => {\r\n    \r\n   const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\r\n\r\n    const addItemToCartHandler = (item) =>{\r\n        dispatchCartAction({type: 'ADD', item: item});\r\n    };\r\n\r\n    const removeItemFromCartHandler = id =>{\r\n        dispatchCartAction({type: 'REMOVE', id: id})\r\n    }\r\n    \r\n    const cartContext = {\r\n        items: cartState.items,\r\n         totalAmount:cartState.totalAmount,\r\n         addItem: addItemToCartHandler,\r\n         removeItem:removeItemFromCartHandler\r\n    };\r\n    \r\n    return( <CartContext.Provider value ={cartContext}>\r\n        {props.children}\r\n    </CartContext.Provider>\r\n)};\r\n\r\nexport default CartProvider"],"mappings":";;AAAA,SAASA,UAAU,QAAQ,OAAO;AAClC,OAAOC,WAAW,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,gBAAgB,GAAG;EACrBC,KAAK,EAAE,EAAE;EACTC,WAAW,EAAE;AACjB,CAAC;AAED,MAAMC,WAAW,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;EACnC,IAAIA,MAAM,CAACC,IAAI,KAAK,KAAK,EAAE;IACzB,MAAMC,kBAAkB,GACtBH,KAAK,CAACF,WAAW,GAAGG,MAAM,CAACG,IAAI,CAACC,KAAK,GAAGJ,MAAM,CAACG,IAAI,CAACE,MAAM;IAE5D,IAAIC,UAAU,GAAG,KAAK;IACtB,MAAMC,YAAY,GAAGR,KAAK,CAACH,KAAK,CAACY,GAAG,CAAEL,IAAI,IAAK;MAC7C,IAAIA,IAAI,CAACM,EAAE,KAAKT,MAAM,CAACG,IAAI,CAACM,EAAE,EAAE;QAC9BH,UAAU,GAAG,IAAI;QACjB,OAAO;UACL,GAAGH,IAAI;UACPE,MAAM,EAAEF,IAAI,CAACE,MAAM,GAAGL,MAAM,CAACG,IAAI,CAACE;QACpC,CAAC;MACH;MACA,OAAOF,IAAI;IACb,CAAC,CAAC;IAEF,IAAI,CAACG,UAAU,EAAE;MACfC,YAAY,CAACG,IAAI,CAACV,MAAM,CAACG,IAAI,CAAC;IAChC;IAEA,OAAO;MACLP,KAAK,EAAEW,YAAY;MACnBV,WAAW,EAAEK;IACf,CAAC;EACH;EAEA,OAAOP,gBAAgB;AACzB,CAAC;AAIH,MAAMgB,YAAY,GAAGC,KAAK,IAAI;EAAAC,EAAA;EAE3B,MAAM,CAACC,SAAS,EAAEC,kBAAkB,CAAC,GAAGxB,UAAU,CAACO,WAAW,EAAEH,gBAAgB,CAAC;EAEhF,MAAMqB,oBAAoB,GAAIb,IAAI,IAAI;IAClCY,kBAAkB,CAAC;MAACd,IAAI,EAAE,KAAK;MAAEE,IAAI,EAAEA;IAAI,CAAC,CAAC;EACjD,CAAC;EAED,MAAMc,yBAAyB,GAAGR,EAAE,IAAG;IACnCM,kBAAkB,CAAC;MAACd,IAAI,EAAE,QAAQ;MAAEQ,EAAE,EAAEA;IAAE,CAAC,CAAC;EAChD,CAAC;EAED,MAAMS,WAAW,GAAG;IAChBtB,KAAK,EAAEkB,SAAS,CAAClB,KAAK;IACrBC,WAAW,EAACiB,SAAS,CAACjB,WAAW;IACjCsB,OAAO,EAAEH,oBAAoB;IAC7BI,UAAU,EAACH;EAChB,CAAC;EAED,oBAAQvB,OAAA,CAACF,WAAW,CAAC6B,QAAQ;IAACC,KAAK,EAAGJ,WAAY;IAAAK,QAAA,EAC7CX,KAAK,CAACW;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAC1B,CAAC;AAACd,EAAA,CAtBGF,YAAY;AAAAiB,EAAA,GAAZjB,YAAY;AAwBlB,eAAeA,YAAY;AAAA,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}